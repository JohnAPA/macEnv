AppleScripts

```
on alfred_script(q)
	tell application "Fantastical 2"
		parse sentence q
	end tell
end alfred_script
```

#get front window #terminal activate
```on alfred_script(q)
  set finderPath to ""

tell application "Finder"
    try
        set finderFolder to (folder of the front window as alias)
    on error
        set finderFolder to (path to home folder as alias)
    end try
    set finderPath to quoted form of POSIX path of finderFolder
end tell

tell application "Terminal"
    activate
    do script "cd " & finderPath
end tell
end alfred_script```

#open application
```open -a AppDelete {query}```

#call a script
```osascript create_zip_archive_file.scpt```

##Python ask alfred to search
```#PopSnipCommand = """osascript -e 'tell application "Alfred 2" to search "snip bsnip"'"""```

##Python import library
```import subprocess,os,re,pickle```

##Python get clipboard data
```def getClipboardData():
    return subprocess.check_output(
    'pbpaste', env={'LANG': 'en_US.UTF-8'}).decode('utf-8')```
##Python paste clipboard
``` def setClipboardData(data):
    process = subprocess.Popen(
    'pbcopy', env={'LANG': 'en_US.UTF-8'}, stdin=subprocess.PIPE)
    process.communicate(data.encode('utf-8')) ```

    ##python REgex
    ```    SplitCurrentClipBoard = re.findall(r'<<<.*>>>',currentClipBoard)[0].replace("<<<","")\
    .replace(">>>","").split(";")
except:
    SplitCurrentClipBoard = []

    ```
    #Applescript 
    on alfred_script(q)
    tell application "System Events"
        key code 126 using option down
        key code 53
    end tell
end alfred_script```


#get file path
```on alfred_script(q)
    tell application "Finder" 
        set thisPath to POSIX path of (target of window 1 as alias)
        return thisPath
    end tell
end alfred_script```
```on alfred_script(q)
    tell application "Finder" 
        set thisPath to quoted form of POSIX path of (target of window 1 as alias)
        return thisPath
    end tell
end alfred_script```

#shell Copy ssh public
```
#!/bin/bash

SSHKEY_FILENAME="{query}".pub
if [ ! -f ~/.ssh/$SSHKEY_FILENAME ]; then
    SSHKEY_FILENAME=id_rsa.pub
fi

cat ~/.ssh/$SSHKEY_FILENAME
```

